<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="105.7170" tests="196" failures="1">
  <testsuite name="Root Suite" timestamp="2020-09-24T17:11:35" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="scanner:rule:add" timestamp="2020-09-24T17:11:35" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="E2E" timestamp="2020-09-24T17:11:35" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Adding individual JARs" timestamp="2020-09-24T17:11:35" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="1.3980" failures="0">
    <testcase name="scanner:rule:add E2E Test Case: Adding individual JARs Individual JARs can be added with their absolute path" time="1.3830" classname="Individual JARs can be added with their absolute path">
    </testcase>
    <testcase name="scanner:rule:add E2E Test Case: Adding individual JARs Individual JARs can be added with their relative paths" time="0.0150" classname="Individual JARs can be added with their relative paths">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Adding all JARs in a folder" timestamp="2020-09-24T17:11:36" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0280" failures="0">
    <testcase name="scanner:rule:add E2E Test Case: Adding all JARs in a folder Folders can be added with their absolute paths" time="0.0140" classname="Folders can be added with their absolute paths">
    </testcase>
    <testcase name="scanner:rule:add E2E Test Case: Adding all JARs in a folder Folders can be added by their relative paths" time="0.0140" classname="Folders can be added by their relative paths">
    </testcase>
  </testsuite>
  <testsuite name="Validations" timestamp="2020-09-24T17:11:36" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Language validations" timestamp="2020-09-24T17:11:36" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0280" failures="0">
    <testcase name="scanner:rule:add Validations Language validations should complain about missing --language flag" time="0.0120" classname="should complain about missing --language flag">
    </testcase>
    <testcase name="scanner:rule:add Validations Language validations should complain about empty language entry" time="0.0160" classname="should complain about empty language entry">
    </testcase>
  </testsuite>
  <testsuite name="Path validations" timestamp="2020-09-24T17:11:36" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/add.test.ts" time="0.0090" failures="0">
    <testcase name="scanner:rule:add Validations Path validations should complain about missing --path flag" time="0.0050" classname="should complain about missing --path flag">
    </testcase>
    <testcase name="scanner:rule:add Validations Path validations should complain about empty path" time="0.0040" classname="should complain about empty path">
    </testcase>
  </testsuite>
  <testsuite name="scanner:rule:describe" timestamp="2020-09-24T17:11:36" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="E2E" timestamp="2020-09-24T17:11:36" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: No matching rules" timestamp="2020-09-24T17:11:36" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="1.3460" failures="0">
    <testcase name="scanner:rule:describe E2E Test Case: No matching rules Correct warning is displayed" time="0.8420" classname="Correct warning is displayed">
    </testcase>
    <testcase name="scanner:rule:describe E2E Test Case: No matching rules --json flag yields correct results" time="0.5040" classname="--json flag yields correct results">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: One matching rule" timestamp="2020-09-24T17:11:38" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="1.0570" failures="0">
    <testcase name="scanner:rule:describe E2E Test Case: One matching rule Displayed output matches expectations" time="0.5200" classname="Displayed output matches expectations">
    </testcase>
    <testcase name="scanner:rule:describe E2E Test Case: One matching rule --json flag yields correct results" time="0.5370" classname="--json flag yields correct results">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Multiple matching rules" timestamp="2020-09-24T17:11:39" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="0.5550" failures="0">
    <testcase name="scanner:rule:describe E2E Test Case: Multiple matching rules Displayed output matches expectations" time="0.5550" classname="Displayed output matches expectations">
    </testcase>
  </testsuite>
  <testsuite name="Error handling" timestamp="2020-09-24T17:11:39" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/describe.test.ts" time="0.0060" failures="0">
    <testcase name="scanner:rule:describe E2E Error handling Must input a rule name" time="0.0060" classname="Must input a rule name">
    </testcase>
  </testsuite>
  <testsuite name="scanner:rule:list" timestamp="2020-09-24T17:11:39" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="E2E" timestamp="2020-09-24T17:11:39" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: No filters applied" timestamp="2020-09-24T17:11:39" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.1860" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: No filters applied All rules are returned" time="0.5650" classname="All rules are returned">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: No filters applied --json flag yields expected JSON" time="0.6210" classname="--json flag yields expected JSON">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by category only" timestamp="2020-09-24T17:11:41" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.4040" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: Filtering by category only Filtering by one category returns only the rules in that category" time="0.6720" classname="Filtering by one category returns only the rules in that category">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by category only Filtering by multiple categories returns any rule in either category" time="0.7320" classname="Filtering by multiple categories returns any rule in either category">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by ruleset only" timestamp="2020-09-24T17:11:42" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.8230" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: Filtering by ruleset only --ruleset option shows deprecation warning" time="0.5760" classname="--ruleset option shows deprecation warning">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by ruleset only Filtering by a single ruleset returns only the rules in that ruleset" time="0.6690" classname="Filtering by a single ruleset returns only the rules in that ruleset">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by ruleset only Filtering by multiple rulesets returns any rule in either ruleset" time="0.5780" classname="Filtering by multiple rulesets returns any rule in either ruleset">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by language only" timestamp="2020-09-24T17:11:44" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.2000" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: Filtering by language only Filtering by a single language returns only rules applied to that language" time="0.5470" classname="Filtering by a single language returns only rules applied to that language">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by language only Filtering by multiple languages returns any rule for either language" time="0.6530" classname="Filtering by multiple languages returns any rule for either language">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by engine only" timestamp="2020-09-24T17:11:45" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.6240" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: Filtering by engine only Filtering by a single engine returns only rules applied to that engine" time="0.5060" classname="Filtering by a single engine returns only rules applied to that engine">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by engine only Filtering by a disabled engine returns rules" time="0.5470" classname="Filtering by a disabled engine returns rules">
    </testcase>
    <testcase name="scanner:rule:list E2E Test Case: Filtering by engine only Filtering by multiple engines returns any rule for either engine" time="0.5710" classname="Filtering by multiple engines returns any rule for either engine">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Applying multiple filter types" timestamp="2020-09-24T17:11:47" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="0.5090" failures="0">
    <testcase name="scanner:rule:list E2E Test Case: Applying multiple filter types Filtering on multiple columns only returns rows that satisfy BOTH filters" time="0.5090" classname="Filtering on multiple columns only returns rows that satisfy BOTH filters">
    </testcase>
  </testsuite>
  <testsuite name="Edge Case: No rules match criteria" timestamp="2020-09-24T17:11:47" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/list.test.ts" time="1.0030" failures="0">
    <testcase name="scanner:rule:list E2E Edge Case: No rules match criteria Without --json flag, an empty table is printed" time="0.5160" classname="Without --json flag, an empty table is printed">
    </testcase>
    <testcase name="scanner:rule:list E2E Edge Case: No rules match criteria With the --json flag, the results are empty" time="0.4870" classname="With the --json flag, the results are empty">
    </testcase>
  </testsuite>
  <testsuite name="scanner:rule:remove" timestamp="2020-09-24T17:11:48" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="E2E" timestamp="2020-09-24T17:11:48" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Dry-Run (omitting --path parameter)" timestamp="2020-09-24T17:11:48" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0160" failures="0">
    <testcase name="scanner:rule:remove E2E Dry-Run (omitting --path parameter) When custom rules are registered, all paths are returned" time="0.0160" classname="When custom rules are registered, all paths are returned">
    </testcase>
  </testsuite>
  <testsuite name="Rule Removal" timestamp="2020-09-24T17:11:48" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Removing a single PMD JAR" timestamp="2020-09-24T17:11:48" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="3.0080" failures="0">
    <testcase name="scanner:rule:remove E2E Rule Removal Test Case: Removing a single PMD JAR The specified JAR is deleted." time="3.0080" classname="The specified JAR is deleted.">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Removing multiple PMD JARs" timestamp="2020-09-24T17:11:51" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="3.0060" failures="0">
    <testcase name="scanner:rule:remove E2E Rule Removal Test Case: Removing multiple PMD JARs The specified JARs are deleted" time="3.0060" classname="The specified JARs are deleted">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Removing an entire folder of PMD JARs" timestamp="2020-09-24T17:11:54" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="3.0080" failures="0">
    <testcase name="scanner:rule:remove E2E Rule Removal Test Case: Removing an entire folder of PMD JARs All JARs in the target folder are deleted" time="3.0080" classname="All JARs in the target folder are deleted">
    </testcase>
  </testsuite>
  <testsuite name="Edge Case: Provided path is not registered as a custom rule" timestamp="2020-09-24T17:11:57" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0170" failures="0">
    <testcase name="scanner:rule:remove E2E Rule Removal Edge Case: Provided path is not registered as a custom rule All JARs in the target folder are deleted" time="0.0170" classname="All JARs in the target folder are deleted">
    </testcase>
  </testsuite>
  <testsuite name="User prompt" timestamp="2020-09-24T17:11:57" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: User chooses to abort transaction instead of confirming" timestamp="2020-09-24T17:11:57" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="3.0050" failures="0">
    <testcase name="scanner:rule:remove E2E User prompt Test Case: User chooses to abort transaction instead of confirming Request is successfully cancelled" time="3.0050" classname="Request is successfully cancelled">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: User uses --force flag to skip confirmation prompt" timestamp="2020-09-24T17:12:00" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0130" failures="0">
    <testcase name="scanner:rule:remove E2E User prompt Test Case: User uses --force flag to skip confirmation prompt --force flag bypasses need for confirmation" time="0.0130" classname="--force flag bypasses need for confirmation">
    </testcase>
  </testsuite>
  <testsuite name="Validations" timestamp="2020-09-24T17:12:00" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Path validations" timestamp="2020-09-24T17:12:00" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/rule/remove.test.ts" time="0.0050" failures="0">
    <testcase name="scanner:rule:remove E2E Validations Path validations should complain about empty path" time="0.0050" classname="should complain about empty path">
    </testcase>
  </testsuite>
  <testsuite name="scanner:run" timestamp="2020-09-24T17:12:00" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="E2E" timestamp="2020-09-24T17:12:00" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Output Type: XML" timestamp="2020-09-24T17:12:00" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Running rules against a single file" timestamp="2020-09-24T17:12:00" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="4.4940" failures="0">
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running rules against a single file When the file contains violations, they are logged out as an XML" time="1.5160" classname="When the file contains violations, they are logged out as an XML">
    </testcase>
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running rules against a single file Target path may be relative or absolute" time="1.4940" classname="Target path may be relative or absolute">
    </testcase>
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running rules against a single file When the file contains no violations, a message is logged to the console" time="1.4840" classname="When the file contains no violations, a message is logged to the console">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Running rules against multiple specified files" timestamp="2020-09-24T17:12:05" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.5620" failures="0">
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running rules against multiple specified files Both files are evaluated, and any violations are logged" time="1.5620" classname="Both files are evaluated, and any violations are logged">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Running rules against a folder" timestamp="2020-09-24T17:12:06" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.7450" failures="0">
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running rules against a folder Any violations in the folder are logged as an XML" time="1.7450" classname="Any violations in the folder are logged as an XML">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Running multiple rulesets at once" timestamp="2020-09-24T17:12:08" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="3.3850" failures="0">
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running multiple rulesets at once --ruleset option shows deprecation warning" time="1.6330" classname="--ruleset option shows deprecation warning">
    </testcase>
    <testcase name="scanner:run E2E Output Type: XML Test Case: Running multiple rulesets at once Violations from each rule are logged as an XML" time="1.7520" classname="Violations from each rule are logged as an XML">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Writing XML results to a file" timestamp="2020-09-24T17:12:11" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.6880" failures="0">
    <testcase name="scanner:run E2E Output Type: XML Test Case: Writing XML results to a file The violations are written to the file as an XML" time="1.6880" classname="The violations are written to the file as an XML">
    </testcase>
  </testsuite>
  <testsuite name="Output Type: CSV" timestamp="2020-09-24T17:12:13" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="6.6960" failures="0">
    <testcase name="scanner:run E2E Output Type: CSV Properly writes CSV to console" time="1.6550" classname="Properly writes CSV to console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: CSV Properly writes CSV to file" time="1.6860" classname="Properly writes CSV to file">
    </testcase>
    <testcase name="scanner:run E2E Output Type: CSV When no violations are detected, a message is logged to the console" time="1.6680" classname="When no violations are detected, a message is logged to the console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: CSV When --oufile is provided and no violations are detected, output file should not be created" time="1.6870" classname="When --oufile is provided and no violations are detected, output file should not be created">
    </testcase>
  </testsuite>
  <testsuite name="Output Type: HTML" timestamp="2020-09-24T17:12:20" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="6.6200" failures="0">
    <testcase name="scanner:run E2E Output Type: HTML Properly writes HTML to console" time="1.6010" classname="Properly writes HTML to console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: HTML Properly writes HTML to file" time="1.5530" classname="Properly writes HTML to file">
    </testcase>
    <testcase name="scanner:run E2E Output Type: HTML When no violations are detected, a message is logged to the console" time="1.6990" classname="When no violations are detected, a message is logged to the console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: HTML When --oufile is provided and no violations are detected, output file should not be created" time="1.7670" classname="When --oufile is provided and no violations are detected, output file should not be created">
    </testcase>
  </testsuite>
  <testsuite name="Output Type: JSON" timestamp="2020-09-24T17:12:26" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="6.2880" failures="0">
    <testcase name="scanner:run E2E Output Type: JSON Properly writes JSON to console" time="1.4850" classname="Properly writes JSON to console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: JSON Properly writes JSON to file" time="1.7460" classname="Properly writes JSON to file">
    </testcase>
    <testcase name="scanner:run E2E Output Type: JSON When no violations are detected, a message is logged to the console" time="1.4340" classname="When no violations are detected, a message is logged to the console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: JSON When --oufile is provided and no violations are detected, output file should not be created" time="1.6230" classname="When --oufile is provided and no violations are detected, output file should not be created">
    </testcase>
  </testsuite>
  <testsuite name="Output Type: Table" timestamp="2020-09-24T17:12:33" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="3.4960" failures="0">
    <testcase name="scanner:run E2E Output Type: Table Properly writes table to the console" time="1.8070" classname="Properly writes table to the console">
    </testcase>
    <testcase name="scanner:run E2E Output Type: Table When no violations are detected, a message is logged to the console" time="1.6890" classname="When no violations are detected, a message is logged to the console">
    </testcase>
  </testsuite>
  <testsuite name="--json flag" timestamp="2020-09-24T17:12:36" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="6.7170" failures="0">
    <testcase name="scanner:run E2E --json flag --json flag uses default format of JSON" time="1.7370" classname="--json flag uses default format of JSON">
    </testcase>
    <testcase name="scanner:run E2E --json flag --json flag wraps other formats in a string" time="1.6590" classname="--json flag wraps other formats in a string">
    </testcase>
    <testcase name="scanner:run E2E --json flag --json flag wraps message about writing to outfile" time="1.6780" classname="--json flag wraps message about writing to outfile">
    </testcase>
    <testcase name="scanner:run E2E --json flag --json flag wraps message about no violations occuring" time="1.6430" classname="--json flag wraps message about no violations occuring">
    </testcase>
  </testsuite>
  <testsuite name="--violations-cause-error flag" timestamp="2020-09-24T17:12:43" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="3.3310" failures="0">
    <testcase name="scanner:run E2E --violations-cause-error flag When no violations are found, no error is thrown" time="1.6460" classname="When no violations are found, no error is thrown">
    </testcase>
    <testcase name="scanner:run E2E --violations-cause-error flag When violations are found, an error is thrown" time="1.6850" classname="When violations are found, an error is thrown">
    </testcase>
  </testsuite>
  <testsuite name="--engine flag" timestamp="2020-09-24T17:12:46" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.5050" failures="0">
    <testcase name="scanner:run E2E --engine flag LWC Engine Successfully parses LWC code" time="0.5060" classname="LWC Engine Successfully parses LWC code">
    </testcase>
    <testcase name="scanner:run E2E --engine flag LWC Engine detects LWC errors" time="0.9990" classname="LWC Engine detects LWC errors">
    </testcase>
  </testsuite>
  <testsuite name="Dynamic Input" timestamp="2020-09-24T17:12:48" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Positive Globs" timestamp="2020-09-24T17:12:48" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Running rules against one positive glob" timestamp="2020-09-24T17:12:48" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.7020" failures="0">
    <testcase name="scanner:run E2E Dynamic Input Positive Globs Test Case: Running rules against one positive glob Glob is resolved to files, and those files are evaluated" time="1.7020" classname="Glob is resolved to files, and those files are evaluated">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Running rules against multiple positive globs" timestamp="2020-09-24T17:12:50" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.9130" failures="0">
    <testcase name="scanner:run E2E Dynamic Input Positive Globs Test Case: Running rules against multiple positive globs Files matching even a single positive glob are evaluated" time="1.9130" classname="Files matching even a single positive glob are evaluated">
    </testcase>
  </testsuite>
  <testsuite name="Negative Globs" timestamp="2020-09-24T17:12:51" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="6.1150" failures="0">
    <testcase name="scanner:run E2E Dynamic Input Negative Globs When mixing negative and positive globs, files must match ALL negative globs to be evaluated" time="2.0580" classname="When mixing negative and positive globs, files must match ALL negative globs to be evaluated">
    </testcase>
    <testcase name="scanner:run E2E Dynamic Input Negative Globs Relative negative globs are properly processed" time="2.0220" classname="Relative negative globs are properly processed">
    </testcase>
    <testcase name="scanner:run E2E Dynamic Input Negative Globs When mixing negative globs and directories, files must match ALL negative globs to be evaluated" time="2.0350" classname="When mixing negative globs and directories, files must match ALL negative globs to be evaluated">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Using ~/ shorthand in target" timestamp="2020-09-24T17:12:58" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="2.0850" failures="0">
    <testcase name="scanner:run E2E Dynamic Input Test Case: Using ~/ shorthand in target Tilde is expanded to full directory" time="2.0850" classname="Tilde is expanded to full directory">
    </testcase>
  </testsuite>
  <testsuite name="Edge Cases" timestamp="2020-09-24T17:13:00" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test case: No output specified" timestamp="2020-09-24T17:13:00" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.8420" failures="0">
    <testcase name="scanner:run E2E Edge Cases Test case: No output specified When no format is specified, we default to a TABLE" time="1.8420" classname="When no format is specified, we default to a TABLE">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: No rules specified" timestamp="2020-09-24T17:13:01" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="2.0090" failures="0">
    <testcase name="scanner:run E2E Edge Cases Test Case: No rules specified When no rules are explicitly specified, all rules are run" time="2.0090" classname="When no rules are explicitly specified, all rules are run">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Evaluating rules against invalid code" timestamp="2020-09-24T17:13:03" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="3.4190" failures="0">
    <testcase name="scanner:run E2E Edge Cases Test Case: Evaluating rules against invalid code When only malformed code is supplied, no violations are detected but a warning is logged" time="1.7110" classname="When only malformed code is supplied, no violations are detected but a warning is logged">
    </testcase>
    <testcase name="scanner:run E2E Edge Cases Test Case: Evaluating rules against invalid code When a malformed file and a valid file are supplied, the malformed file does not tank the process" time="1.7080" classname="When a malformed file and a valid file are supplied, the malformed file does not tank the process">
    </testcase>
  </testsuite>
  <testsuite name="Error handling" timestamp="2020-09-24T17:13:07" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.5350" failures="0">
    <testcase name="scanner:run E2E Error handling Error thrown when no target is specified" time="0.0090" classname="Error thrown when no target is specified">
    </testcase>
    <testcase name="scanner:run E2E Error handling Error thrown when output file is malformed" time="0.0090" classname="Error thrown when output file is malformed">
    </testcase>
    <testcase name="scanner:run E2E Error handling Error thrown when output file is unsupported type" time="0.0070" classname="Error thrown when output file is unsupported type">
    </testcase>
    <testcase name="scanner:run E2E Error handling Warning logged when output file format does not match format" time="0.5100" classname="Warning logged when output file format does not match format">
    </testcase>
  </testsuite>
  <testsuite name="MultiEngine" timestamp="2020-09-24T17:13:07" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Project: JS" timestamp="2020-09-24T17:13:07" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="2.2650" failures="0">
    <testcase name="scanner:run MultiEngine Project: JS Polyglot project triggers pmd and eslint rules" time="2.2650" classname="Polyglot project triggers pmd and eslint rules">
    </testcase>
  </testsuite>
  <testsuite name="BaseConfig Environment Tests For Javascript" timestamp="2020-09-24T17:13:10" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="1.6840" failures="0">
    <testcase name="scanner:run BaseConfig Environment Tests For Javascript The baseConfig enables the usage of default Javascript Types" time="0.5500" classname="The baseConfig enables the usage of default Javascript Types">
    </testcase>
    <testcase name="scanner:run BaseConfig Environment Tests For Javascript By default, frameworks such as QUnit are not included in the baseConfig" time="0.5810" classname="By default, frameworks such as QUnit are not included in the baseConfig">
    </testcase>
    <testcase name="scanner:run BaseConfig Environment Tests For Javascript Providing qunit in the --env override should resolve errors about that framework" time="0.5530" classname="Providing qunit in the --env override should resolve errors about that framework">
    </testcase>
  </testsuite>
  <testsuite name="Verbose tests must come last. Verbose does not reset" timestamp="2020-09-24T17:13:11" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/commands/scanner/run.test.ts" time="2.1390" failures="1">
    <testcase name="scanner:run Verbose tests must come last. Verbose does not reset When the --verbose flag is supplied, info about implicitly run rules is logged" time="2.1390" classname="When the --verbose flag is supplied, info about implicitly run rules is logged">
      <failure message="Entries for implicitly added categories from all engines:
 [&quot;Implicitly including pmd rules from category &apos;Design&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Multithreading&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;SomeCat2&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;SomeCat3&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Documentation&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Best Practices&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;SomeCat1&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Security&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Code Style&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Performance&apos;&quot;,&quot;Implicitly including pmd rules from category &apos;Error Prone&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Best Practices&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Stylistic Issues&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;ECMAScript 6&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Node.js and CommonJS&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Possible Errors&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Variables&apos;&quot;,&quot;Implicitly including eslint rules from category &apos;Strict Mode&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Best Practices&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Stylistic Issues&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;ECMAScript 6&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Node.js and CommonJS&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Possible Errors&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Variables&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;Strict Mode&apos;&quot;,&quot;Implicitly including eslint-lwc rules from category &apos;LWC&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Best Practices&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Stylistic Issues&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;ECMAScript 6&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Node.js and CommonJS&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Possible Errors&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Variables&apos;&quot;,&quot;Implicitly including eslint-typescript rules from category &apos;Strict Mode&apos;&quot;,&quot;Implicitly including retire-js rules from category &apos;Insecure Dependencies&apos;&quot;]: expected [ Array(34) ] to have a length of 33 but got 34" type="AssertionError"><![CDATA[AssertionError: Entries for implicitly added categories from all engines:
 ["Implicitly including pmd rules from category 'Design'","Implicitly including pmd rules from category 'Multithreading'","Implicitly including pmd rules from category 'SomeCat2'","Implicitly including pmd rules from category 'SomeCat3'","Implicitly including pmd rules from category 'Documentation'","Implicitly including pmd rules from category 'Best Practices'","Implicitly including pmd rules from category 'SomeCat1'","Implicitly including pmd rules from category 'Security'","Implicitly including pmd rules from category 'Code Style'","Implicitly including pmd rules from category 'Performance'","Implicitly including pmd rules from category 'Error Prone'","Implicitly including eslint rules from category 'Best Practices'","Implicitly including eslint rules from category 'Stylistic Issues'","Implicitly including eslint rules from category 'ECMAScript 6'","Implicitly including eslint rules from category 'Node.js and CommonJS'","Implicitly including eslint rules from category 'Possible Errors'","Implicitly including eslint rules from category 'Variables'","Implicitly including eslint rules from category 'Strict Mode'","Implicitly including eslint-lwc rules from category 'Best Practices'","Implicitly including eslint-lwc rules from category 'Stylistic Issues'","Implicitly including eslint-lwc rules from category 'ECMAScript 6'","Implicitly including eslint-lwc rules from category 'Node.js and CommonJS'","Implicitly including eslint-lwc rules from category 'Possible Errors'","Implicitly including eslint-lwc rules from category 'Variables'","Implicitly including eslint-lwc rules from category 'Strict Mode'","Implicitly including eslint-lwc rules from category 'LWC'","Implicitly including eslint-typescript rules from category 'Best Practices'","Implicitly including eslint-typescript rules from category 'Stylistic Issues'","Implicitly including eslint-typescript rules from category 'ECMAScript 6'","Implicitly including eslint-typescript rules from category 'Node.js and CommonJS'","Implicitly including eslint-typescript rules from category 'Possible Errors'","Implicitly including eslint-typescript rules from category 'Variables'","Implicitly including eslint-typescript rules from category 'Strict Mode'","Implicitly including retire-js rules from category 'Insecure Dependencies'"]: expected [ Array(34) ] to have a length of 33 but got 34
    at Context.<anonymous> (test/commands/scanner/run.test.ts:145:29)
    at Object.run (node_modules/fancy-test/lib/base.js:44:38)
    at Context.run (node_modules/fancy-test/lib/base.js:68:36)
    at processTicksAndRejections (internal/process/task_queues.js:89:5)]]></failure>
    </testcase>
  </testsuite>
  <testsuite name="Controller.ts tests" timestamp="2020-09-24T17:13:14" tests="5" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/Controller.test.ts" time="0.0460" failures="0">
    <testcase name="Controller.ts tests getAllEngines returns enabled/disabled engines" time="0.0030" classname="getAllEngines returns enabled/disabled engines">
    </testcase>
    <testcase name="Controller.ts tests getEnabledEngines returns only enabled engines" time="0.0060" classname="getEnabledEngines returns only enabled engines">
    </testcase>
    <testcase name="Controller.ts tests getFilteredEngines filters and includes disabled" time="0.0020" classname="getFilteredEngines filters and includes disabled">
    </testcase>
    <testcase name="Controller.ts tests getEnabledEngines throws exception when no engines are found" time="0.0330" classname="getEnabledEngines throws exception when no engines are found">
    </testcase>
    <testcase name="Controller.ts tests getFilteredEngines throws exception when no engines are found" time="0.0020" classname="getFilteredEngines throws exception when no engines are found">
    </testcase>
  </testsuite>
  <testsuite name="CustomRulePathManager tests" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Rule path entries creation" timestamp="2020-09-24T17:13:14" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0060" failures="0">
    <testcase name="CustomRulePathManager tests Rule path entries creation should handle empty Rule Path file gracefully" time="0.0060" classname="should handle empty Rule Path file gracefully">
    </testcase>
  </testsuite>
  <testsuite name="with pre-populated file" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0130" failures="0">
    <testcase name="CustomRulePathManager tests Rule path entries creation with pre-populated file should read CustomPaths.json to get Rule Path Entries" time="0.0070" classname="should read CustomPaths.json to get Rule Path Entries">
    </testcase>
    <testcase name="CustomRulePathManager tests Rule path entries creation with pre-populated file should initialize only once" time="0.0060" classname="should initialize only once">
    </testcase>
  </testsuite>
  <testsuite name="Adding new Rule path entries" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Adding individual files" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0090" failures="0">
    <testcase name="CustomRulePathManager tests Adding new Rule path entries Test Case: Adding individual files Should reflect any new entries" time="0.0050" classname="Should reflect any new entries">
    </testcase>
    <testcase name="CustomRulePathManager tests Adding new Rule path entries Test Case: Adding individual files Should append new entries to any existing entries for the language" time="0.0040" classname="Should append new entries to any existing entries for the language">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Adding the contents of a folder" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/CustomRulePathManager.test.ts" time="0.0140" failures="0">
    <testcase name="CustomRulePathManager tests Adding new Rule path entries Test Case: Adding the contents of a folder Should reflect newly added entries" time="0.0090" classname="Should reflect newly added entries">
    </testcase>
    <testcase name="CustomRulePathManager tests Adding new Rule path entries Test Case: Adding the contents of a folder Should append new entries to any existing entries for language" time="0.0050" classname="Should append new entries to any existing entries for language">
    </testcase>
  </testsuite>
  <testsuite name="Tests for BaseEslintEngine" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Tests for run()" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Related to target input" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0040" failures="0">
    <testcase name="Tests for BaseEslintEngine Tests for run() Related to target input should not execute when target is empty" time="0.0010" classname="should not execute when target is empty">
    </testcase>
    <testcase name="Tests for BaseEslintEngine Tests for run() Related to target input should use target as current working directory if target is a directory" time="0.0030" classname="should use target as current working directory if target is a directory">
    </testcase>
  </testsuite>
  <testsuite name="Related to rules input" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0010" failures="0">
    <testcase name="Tests for BaseEslintEngine Tests for run() Related to rules input should not execute when rules are empty" time="0.0000" classname="should not execute when rules are empty">
    </testcase>
    <testcase name="Tests for BaseEslintEngine Tests for run() Related to rules input should not execute when no rules are relevant" time="0.0010" classname="should not execute when no rules are relevant">
    </testcase>
  </testsuite>
  <testsuite name="Rule mapping" timestamp="2020-09-24T17:13:14" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0010" failures="0">
    <testcase name="Tests for BaseEslintEngine Tests for run() Rule mapping should map Eslint-rule to sfdx scanner rule structure" time="0.0010" classname="should map Eslint-rule to sfdx scanner rule structure">
    </testcase>
  </testsuite>
  <testsuite name="Tests for getCatalog()" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Related to mapping all rules to Catalog" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/BaseEslintEngine.test.ts" time="0.0020" failures="0">
    <testcase name="Tests for BaseEslintEngine Tests for getCatalog() Related to mapping all rules to Catalog should map ESRules to Catalog" time="0.0010" classname="should map ESRules to Catalog">
    </testcase>
    <testcase name="Tests for BaseEslintEngine Tests for getCatalog() Related to mapping all rules to Catalog should add rule to an existing category if applicable" time="0.0010" classname="should add rule to an existing category if applicable">
    </testcase>
  </testsuite>
  <testsuite name="TypescriptEslint Strategy" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test cases with tsconfig.json" timestamp="2020-09-24T17:13:14" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="findTsconfig" timestamp="2020-09-24T17:13:14" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="0.0060" failures="0">
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json findTsconfig use tsconfig from cwd" time="0.0020" classname="use tsconfig from cwd">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json findTsconfig use tsconfig from engineOptions" time="0.0010" classname="use tsconfig from engineOptions">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json findTsconfig engineOptions.tsconfig should take precedence over tsconfig.json file found in the current working directory" time="0.0010" classname="engineOptions.tsconfig should take precedence over tsconfig.json file found in the current working directory">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json findTsconfig should throw an error if tsconfig is not in current working directory and not specified by engineOptions" time="0.0020" classname="should throw an error if tsconfig is not in current working directory and not specified by engineOptions">
    </testcase>
  </testsuite>
  <testsuite name="checkWorkingDirectoryForTsconfig" timestamp="2020-09-24T17:13:14" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="0.0020" failures="0">
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkWorkingDirectoryForTsconfig finds tsconfig in current working directory" time="0.0010" classname="finds tsconfig in current working directory">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkWorkingDirectoryForTsconfig does not find tsconfig in current working directory" time="0.0010" classname="does not find tsconfig in current working directory">
    </testcase>
  </testsuite>
  <testsuite name="checkEngineOptionsForTsconfig" timestamp="2020-09-24T17:13:14" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="0.0020" failures="0">
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkEngineOptionsForTsconfig engineOption specifies a valid tsconfig.json" time="0.0000" classname="engineOption specifies a valid tsconfig.json">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkEngineOptionsForTsconfig engineOption does not specify tsconfig.json" time="0.0000" classname="engineOption does not specify tsconfig.json">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkEngineOptionsForTsconfig should throw an error if tsconfig.json file specified engineOption does not exist" time="0.0010" classname="should throw an error if tsconfig.json file specified engineOption does not exist">
    </testcase>
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json checkEngineOptionsForTsconfig should throw an error if tsconfig engineOption is found, but is not a file named tsconfig.json" time="0.0010" classname="should throw an error if tsconfig engineOption is found, but is not a file named tsconfig.json">
    </testcase>
  </testsuite>
  <testsuite name="typescript file not in tsconfig.json causes error" timestamp="2020-09-24T17:13:14" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/eslint/TypescriptEslintStrategy.test.ts" time="1.0700" failures="0">
    <testcase name="TypescriptEslint Strategy Test cases with tsconfig.json typescript file not in tsconfig.json causes error The typescript engine should convert the eslint error to something more user friendly" time="1.0700" classname="The typescript engine should convert the eslint error to something more user friendly">
    </testcase>
  </testsuite>
  <testsuite name="JreSetupManager #verifyJreSetup" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/JreSetupManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="With valid javaHome path in Config and an accepted Java version" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/JreSetupManager.test.ts" time="0.0010" failures="0">
    <testcase name="JreSetupManager #verifyJreSetup With valid javaHome path in Config and an accepted Java version should set correct Key in config" time="0.0010" classname="should set correct Key in config">
    </testcase>
  </testsuite>
  <testsuite name="With no Config entry, but valid path in System variable" timestamp="2020-09-24T17:13:15" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/JreSetupManager.test.ts" time="0.0020" failures="0">
    <testcase name="JreSetupManager #verifyJreSetup With no Config entry, but valid path in System variable should check JAVA_HOME for path" time="0.0000" classname="should check JAVA_HOME for path">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With no Config entry, but valid path in System variable should check JRE_HOME for path" time="0.0010" classname="should check JRE_HOME for path">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With no Config entry, but valid path in System variable should check JDK_HOME for path" time="0.0010" classname="should check JDK_HOME for path">
    </testcase>
  </testsuite>
  <testsuite name="With no Config entry or System variable, but can auto detect a valid javaHome" timestamp="2020-09-24T17:13:15" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/JreSetupManager.test.ts" time="0.0110" failures="0">
    <testcase name="JreSetupManager #verifyJreSetup With no Config entry or System variable, but can auto detect a valid javaHome should handle successful javaHome auto detection" time="0.0010" classname="should handle successful javaHome auto detection">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With no Config entry or System variable, but can auto detect a valid javaHome should handle failed javaHome auto detection" time="0.0100" classname="should handle failed javaHome auto detection">
    </testcase>
  </testsuite>
  <testsuite name="With Config entry leading to different outcomes" timestamp="2020-09-24T17:13:15" tests="4" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/JreSetupManager.test.ts" time="0.0040" failures="0">
    <testcase name="JreSetupManager #verifyJreSetup With Config entry leading to different outcomes should fail when invalid path is found" time="0.0010" classname="should fail when invalid path is found">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With Config entry leading to different outcomes should fail when valid path is found, but Java version is not acceptable" time="0.0010" classname="should fail when valid path is found, but Java version is not acceptable">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With Config entry leading to different outcomes should finish successfully when Java11 is found" time="0.0010" classname="should finish successfully when Java11 is found">
    </testcase>
    <testcase name="JreSetupManager #verifyJreSetup With Config entry leading to different outcomes should finish successfully when Java14 is found on Windows" time="0.0010" classname="should finish successfully when Java14 is found on Windows">
    </testcase>
  </testsuite>
  <testsuite name="PmdCatalogWrapper" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="buildCommandArray()" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="JAR parameters" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Common to all scenarios" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.1390" failures="0">
    <testcase name="PmdCatalogWrapper buildCommandArray() JAR parameters Common to all scenarios uses the correct common parameter values" time="0.1390" classname="uses the correct common parameter values">
    </testcase>
  </testsuite>
  <testsuite name="When Custom PMD JARs have been registered for a language whose default PMD rules are off..." timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.1040" failures="0">
    <testcase name="PmdCatalogWrapper buildCommandArray() JAR parameters When Custom PMD JARs have been registered for a language whose default PMD rules are off... Custom PMD JARs are included" time="0.1040" classname="Custom PMD JARs are included">
    </testcase>
  </testsuite>
  <testsuite name="When Custom PMD JARs have been registered for a language under a weird alias..." timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0930" failures="0">
    <testcase name="PmdCatalogWrapper buildCommandArray() JAR parameters When Custom PMD JARs have been registered for a language under a weird alias... Custom PMD JARs are included" time="0.0930" classname="Custom PMD JARs are included">
    </testcase>
  </testsuite>
  <testsuite name="When not all supported languages have an associated PMD JAR" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0910" failures="0">
    <testcase name="PmdCatalogWrapper buildCommandArray() JAR parameters When not all supported languages have an associated PMD JAR should not include a supported language as input to PmdCataloger if the language has no associated path" time="0.0910" classname="should not include a supported language as input to PmdCataloger if the language has no associated path">
    </testcase>
  </testsuite>
  <testsuite name="Missing Rule Files are Handled Gracefully" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdCatalogWrapper.test.ts" time="0.0100" failures="0">
    <testcase name="PmdCatalogWrapper buildCommandArray() JAR parameters Missing Rule Files are Handled Gracefully Missing file should be filtered out and display warning" time="0.0100" classname="Missing file should be filtered out and display warning">
    </testcase>
  </testsuite>
  <testsuite name="PmdEngine" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdEngine.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="processStdOut()" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdEngine.test.ts" time="0.0260" failures="0">
    <testcase name="PmdEngine processStdOut() Non file XML nodes are filtered out of results" time="0.0260" classname="Non file XML nodes are filtered out of results">
    </testcase>
  </testsuite>
  <testsuite name="emitErrorsAndWarnings()" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdEngine.test.ts" time="0.0340" failures="0">
    <testcase name="PmdEngine emitErrorsAndWarnings() Non file XML nodes are filtered converted to UX events" time="0.0340" classname="Non file XML nodes are filtered converted to UX events">
    </testcase>
  </testsuite>
  <testsuite name="processStdout unusual cases" timestamp="2020-09-24T17:13:15" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdEngine.test.ts" time="0.0030" failures="0">
    <testcase name="PmdEngine processStdout unusual cases Empty stdout" time="0.0010" classname="Empty stdout">
    </testcase>
    <testcase name="PmdEngine processStdout unusual cases Missing closing tag" time="0.0010" classname="Missing closing tag">
    </testcase>
    <testcase name="PmdEngine processStdout unusual cases Missing opening tag" time="0.0010" classname="Missing opening tag">
    </testcase>
  </testsuite>
  <testsuite name="PmdLanguageManager" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getSupportedLanguages()" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="When Config specifies exact language names" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0010" failures="0">
    <testcase name="PmdLanguageManager getSupportedLanguages() When Config specifies exact language names Explicitly supported languages are returned" time="0.0010" classname="Explicitly supported languages are returned">
    </testcase>
  </testsuite>
  <testsuite name="When Config specifies weirdly aliased language names" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0010" failures="0">
    <testcase name="PmdLanguageManager getSupportedLanguages() When Config specifies weirdly aliased language names Aliases are successfully resolved into a viable language name" time="0.0010" classname="Aliases are successfully resolved into a viable language name">
    </testcase>
  </testsuite>
  <testsuite name="When Config specifies invalid language alias" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0000" failures="0">
    <testcase name="PmdLanguageManager getSupportedLanguages() When Config specifies invalid language alias When no viable alias is found, an error is thrown" time="0.0000" classname="When no viable alias is found, an error is thrown">
    </testcase>
  </testsuite>
  <testsuite name="When Javascript appears in config()" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/pmd/PmdLanguageManager.test.ts" time="0.0060" failures="0">
    <testcase name="PmdLanguageManager getSupportedLanguages() When Javascript appears in config() Throws exception if javascript is found in supportedLanguages array" time="0.0060" classname="Throws exception if javascript is found in supportedLanguages array">
    </testcase>
  </testsuite>
  <testsuite name="RuleManager" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="getRulesMatchingCriteria()" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: No filters provided" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0010" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: No filters provided When no filters are provided, all default-enabled rules are returned" time="0.0010" classname="When no filters are provided, all default-enabled rules are returned">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by category only" timestamp="2020-09-24T17:13:15" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by category only Filtering by one category returns only rules in that category" time="0.0000" classname="Filtering by one category returns only rules in that category">
    </testcase>
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by category only Filtering by multiple categories returns any rule in either category" time="0.0000" classname="Filtering by multiple categories returns any rule in either category">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by ruleset only" timestamp="2020-09-24T17:13:15" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by ruleset only Filtering by a single ruleset returns only the rules in that ruleset" time="0.0000" classname="Filtering by a single ruleset returns only the rules in that ruleset">
    </testcase>
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by ruleset only Filtering by multiple rulesets returns any rule in either ruleset" time="0.0000" classname="Filtering by multiple rulesets returns any rule in either ruleset">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Filtering by language" timestamp="2020-09-24T17:13:15" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by language Filtering by a single language returns only rules targeting that language" time="0.0000" classname="Filtering by a single language returns only rules targeting that language">
    </testcase>
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Filtering by language Filtering by multiple languages returns any rule targeting either language" time="0.0000" classname="Filtering by multiple languages returns any rule targeting either language">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Mixing filter types" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Test Case: Mixing filter types Filtering on multiple columns at once returns only rules that satisfy ALL filters" time="0.0000" classname="Filtering on multiple columns at once returns only rules that satisfy ALL filters">
    </testcase>
  </testsuite>
  <testsuite name="Edge Case: No rules match criteria" timestamp="2020-09-24T17:13:15" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
    <testcase name="RuleManager getRulesMatchingCriteria() Edge Case: No rules match criteria When no rules match the given criteria, an empty list is returned" time="0.0000" classname="When no rules match the given criteria, an empty list is returned">
    </testcase>
  </testsuite>
  <testsuite name="runRulesMatchingCriteria()" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Run against test projects" timestamp="2020-09-24T17:13:15" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Test Case: Run without filters" timestamp="2020-09-24T17:13:15" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="1.9850" failures="0">
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Test Case: Run without filters JS project files" time="0.0470" classname="JS project files">
    </testcase>
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Test Case: Run without filters TS project files" time="0.0530" classname="TS project files">
    </testcase>
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Test Case: Run without filters App project files" time="1.8850" classname="App project files">
    </testcase>
  </testsuite>
  <testsuite name="Test Case: Run by category" timestamp="2020-09-24T17:13:17" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="3.4730" failures="0">
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Test Case: Run by category Filtering by one category runs only rules in that category" time="1.7310" classname="Filtering by one category runs only rules in that category">
    </testcase>
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Test Case: Run by category Filtering by multiple categories runs any rule in either category" time="1.7420" classname="Filtering by multiple categories runs any rule in either category">
    </testcase>
  </testsuite>
  <testsuite name="Edge Case: No rules match criteria" timestamp="2020-09-24T17:13:21" tests="1" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleManager.test.ts" time="0.0200" failures="0">
    <testcase name="RuleManager runRulesMatchingCriteria() Test Case: Run against test projects Edge Case: No rules match criteria When no rules match the given criteria, an empty string is returned" time="0.0200" classname="When no rules match the given criteria, an empty string is returned">
    </testcase>
  </testsuite>
  <testsuite name="RuleResultRecombinator" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleResultRecombinator.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="#recombineAndReformatResults()" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleResultRecombinator.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Output Format: JUnit" timestamp="2020-09-24T17:13:21" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/RuleResultRecombinator.test.ts" time="0.0020" failures="0">
    <testcase name="RuleResultRecombinator #recombineAndReformatResults() Output Format: JUnit Properly handles one file with one violation" time="0.0020" classname="Properly handles one file with one violation">
    </testcase>
    <testcase name="RuleResultRecombinator #recombineAndReformatResults() Output Format: JUnit Properly handles one file with multiple violations" time="0.0000" classname="Properly handles one file with multiple violations">
    </testcase>
    <testcase name="RuleResultRecombinator #recombineAndReformatResults() Output Format: JUnit Properly handles multiple files with multiple violations" time="0.0000" classname="Properly handles multiple files with multiple violations">
    </testcase>
  </testsuite>
  <testsuite name="Config.js tests" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/Config.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Verifying config behavior" timestamp="2020-09-24T17:13:21" tests="12" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/Config.test.ts" time="0.0310" failures="0">
    <testcase name="Config.js tests Verifying config behavior should create new file if Config.json does not exist" time="0.0080" classname="should create new file if Config.json does not exist">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should initialize with existing config file if available" time="0.0020" classname="should initialize with existing config file if available">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should fetch config value if available" time="0.0020" classname="should fetch config value if available">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should get default value if config value is empty" time="0.0020" classname="should get default value if config value is empty">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should update config with default value if config does not exist" time="0.0020" classname="should update config with default value if config does not exist">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should update config with default engine value if config does not contain the engine&apos;s information" time="0.0020" classname="should update config with default engine value if config does not contain the engine&apos;s information">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior should be compatible with older version of Config.json" time="0.0020" classname="should be compatible with older version of Config.json">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior Test default enabled engines" time="0.0040" classname="Test default enabled engines">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior Test lookupAndUpdateToDefault for string array" time="0.0020" classname="Test lookupAndUpdateToDefault for string array">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior Test lookupAndUpdateToDefault for default false value" time="0.0020" classname="Test lookupAndUpdateToDefault for default false value">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior Test lookupAndUpdateToDefault for default true value" time="0.0020" classname="Test lookupAndUpdateToDefault for default true value">
    </testcase>
    <testcase name="Config.js tests Verifying config behavior Test lookupAndUpdateToDefault for missing value throws exception" time="0.0010" classname="Test lookupAndUpdateToDefault for missing value throws exception">
    </testcase>
  </testsuite>
  <testsuite name="Verifying typeCheckers" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/Config.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="#stringArrayCheck" timestamp="2020-09-24T17:13:21" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/Config.test.ts" time="0.0040" failures="0">
    <testcase name="Config.js tests Verifying typeCheckers #stringArrayCheck should fail for a value that is not an array" time="0.0020" classname="should fail for a value that is not an array">
    </testcase>
    <testcase name="Config.js tests Verifying typeCheckers #stringArrayCheck should fail for a value that is an array but not an array of string" time="0.0020" classname="should fail for a value that is an array but not an array of string">
    </testcase>
  </testsuite>
  <testsuite name="#booleanCheck" timestamp="2020-09-24T17:13:21" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/Config.test.ts" time="0.0050" failures="0">
    <testcase name="Config.js tests Verifying typeCheckers #stringArrayCheck #booleanCheck should succeed for a value that is false" time="0.0010" classname="should succeed for a value that is false">
    </testcase>
    <testcase name="Config.js tests Verifying typeCheckers #stringArrayCheck #booleanCheck should succeed for a value that is true" time="0.0030" classname="should succeed for a value that is true">
    </testcase>
    <testcase name="Config.js tests Verifying typeCheckers #stringArrayCheck #booleanCheck should fail for a value that is not a boolean" time="0.0010" classname="should fail for a value that is not a boolean">
    </testcase>
  </testsuite>
  <testsuite name="PathMatcher" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="#filterPathsByPatterns()" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Positive patterns only" timestamp="2020-09-24T17:13:21" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
    <testcase name="PathMatcher #filterPathsByPatterns() Positive patterns only INCLUDES paths matching ANY positive pattern" time="0.0000" classname="INCLUDES paths matching ANY positive pattern">
    </testcase>
    <testcase name="PathMatcher #filterPathsByPatterns() Positive patterns only EXCLUDES paths matching NO positive patterns" time="0.0000" classname="EXCLUDES paths matching NO positive patterns">
    </testcase>
  </testsuite>
  <testsuite name="Negative patterns only" timestamp="2020-09-24T17:13:21" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
    <testcase name="PathMatcher #filterPathsByPatterns() Negative patterns only INCLUDES paths matching EVERY negative pattern" time="0.0000" classname="INCLUDES paths matching EVERY negative pattern">
    </testcase>
    <testcase name="PathMatcher #filterPathsByPatterns() Negative patterns only EXCLUDES paths matching NOT EVERY negative pattern" time="0.0000" classname="EXCLUDES paths matching NOT EVERY negative pattern">
    </testcase>
  </testsuite>
  <testsuite name="Mixed patterns" timestamp="2020-09-24T17:13:21" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0010" failures="0">
    <testcase name="PathMatcher #filterPathsByPatterns() Mixed patterns INCLUDES paths matching ANY positive AND ALL negative patterns" time="0.0000" classname="INCLUDES paths matching ANY positive AND ALL negative patterns">
    </testcase>
    <testcase name="PathMatcher #filterPathsByPatterns() Mixed patterns EXCLUDES paths matching ANY positive patterns but NOT ALL negative patterns" time="0.0010" classname="EXCLUDES paths matching ANY positive patterns but NOT ALL negative patterns">
    </testcase>
    <testcase name="PathMatcher #filterPathsByPatterns() Mixed patterns EXCLUDES paths matching ALL negative patterns but NO positive patterns" time="0.0000" classname="EXCLUDES paths matching ALL negative patterns but NO positive patterns">
    </testcase>
  </testsuite>
  <testsuite name="#pathMatchesPatterns()" timestamp="2020-09-24T17:13:21" tests="0" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="Positive patterns only" timestamp="2020-09-24T17:13:21" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
    <testcase name="PathMatcher #pathMatchesPatterns() Positive patterns only MATCHES paths matching ANY positive pattern" time="0.0000" classname="MATCHES paths matching ANY positive pattern">
    </testcase>
    <testcase name="PathMatcher #pathMatchesPatterns() Positive patterns only DOES NOT MATCH paths matching NO positive patterns" time="0.0000" classname="DOES NOT MATCH paths matching NO positive patterns">
    </testcase>
  </testsuite>
  <testsuite name="Negative patterns only" timestamp="2020-09-24T17:13:21" tests="2" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
    <testcase name="PathMatcher #pathMatchesPatterns() Negative patterns only MATCHES paths matching EVERY negative pattern" time="0.0000" classname="MATCHES paths matching EVERY negative pattern">
    </testcase>
    <testcase name="PathMatcher #pathMatchesPatterns() Negative patterns only DOES NOT MATCH paths matching NOT EVERY negative pattern" time="0.0000" classname="DOES NOT MATCH paths matching NOT EVERY negative pattern">
    </testcase>
  </testsuite>
  <testsuite name="Mixed patterns" timestamp="2020-09-24T17:13:21" tests="3" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PathMatcher.test.ts" time="0.0000" failures="0">
    <testcase name="PathMatcher #pathMatchesPatterns() Mixed patterns MATCHES paths matching positive and negative patterns" time="0.0000" classname="MATCHES paths matching positive and negative patterns">
    </testcase>
    <testcase name="PathMatcher #pathMatchesPatterns() Mixed patterns DOES NOT MATCH paths matching positive patterns but not negative patterns" time="0.0000" classname="DOES NOT MATCH paths matching positive patterns but not negative patterns">
    </testcase>
    <testcase name="PathMatcher #pathMatchesPatterns() Mixed patterns DOES NOT MATCH paths matching negative patterns but not positive patterns" time="0.0000" classname="DOES NOT MATCH paths matching negative patterns but not positive patterns">
    </testcase>
  </testsuite>
  <testsuite name="PrettyPrinter tests" timestamp="2020-09-24T17:13:21" tests="7" file="/Users/jfeingold/Code/sfdx-scanner/test/lib/util/PrettyPrinter.test.ts" time="0.0040" failures="0">
    <testcase name="PrettyPrinter tests should print Set&lt;string&gt;" time="0.0000" classname="should print Set&lt;string&gt;">
    </testcase>
    <testcase name="PrettyPrinter tests should print Map&lt;string, Set&lt;string&gt;&gt;" time="0.0000" classname="should print Map&lt;string, Set&lt;string&gt;&gt;">
    </testcase>
    <testcase name="PrettyPrinter tests should print Map&lt;string, Map&lt;string, Set&lt;string&gt;&gt;&gt;" time="0.0010" classname="should print Map&lt;string, Map&lt;string, Set&lt;string&gt;&gt;&gt;">
    </testcase>
    <testcase name="PrettyPrinter tests should print a RuleFilter" time="0.0010" classname="should print a RuleFilter">
    </testcase>
    <testcase name="PrettyPrinter tests should print RuleFilter array" time="0.0000" classname="should print RuleFilter array">
    </testcase>
    <testcase name="PrettyPrinter tests should print a Rule" time="0.0010" classname="should print a Rule">
    </testcase>
    <testcase name="PrettyPrinter tests should print a Rule array" time="0.0010" classname="should print a Rule array">
    </testcase>
  </testsuite>
</testsuites>